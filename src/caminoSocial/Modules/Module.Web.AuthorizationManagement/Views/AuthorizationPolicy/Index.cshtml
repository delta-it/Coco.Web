@model PageListViewModel<AuthorizationPolicyViewModel>
@inject IPageAuthorizeManager pageAuthorizeManager
@{
    ViewData["Title"] = "Authorization policies management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Title {
    @ViewData["Title"]
}
<div class="card-header bg-dark text-light">
    <div class="row">
        <div class="col-auto mr-auto">
            <form class="form-inline mr-3">
                <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
        <div class="col-auto">
            @if (Model.CanCreate)
            {
                <a asp-action="Create" asp-controller="AuthorizationPolicy" class="btn btn-sm btn-outline-primary">
                    <i class="fa fa-plus"></i>
                </a>
            }
        </div>
    </div>
</div>
<div class="card-body">
    <table class="table table-bordered">
        <thead>
            <tr class="bg-light">
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Created</th>
                <th scope="col">Updated</th>
                <th scope="col" width="200">Tools</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Collections.Any())
            {
                foreach (var policy in Model.Collections)
                {
                    pageAuthorizeManager.SetPageAuthorizationForModel(policy, Model);
                    <partial name="_AuthorizationPolicyRow" model="policy" />
                }
            }
            else
            {
                <tr>
                    <td colspan="3">No data</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@await Component.InvokeAsync("PageNavigation", Model.Paging)
